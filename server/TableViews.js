const $C = require("./Constants")
const ForManagers = Symbol("ForManagers")
const ForTranslators = Symbol("ForTranslators")
const Unlistenable = Symbol("Unlistenable")
const AllowsCriteria = Symbol("AllowsCriteria")

// This is used in several places
const projectsListFields =
    "PROJECTS.PK,PROJECT_NUMBER,STATUS,CLIENT_ORDER_NUMBER,DEADLINE,DEADLINE_INTERMEDIATE,DEADLINE_TRANSLATOR,DEADLINE_PROOFREADER,DEADLINE_REOPENED,CLIENT_ID,IS_IMPORTANT,IS_BIG,IS_ON_HOLD," +
    "CAT_TOOLS,CAT_TOOLS_OTHER,SOURCE_LANGUAGE_ID,PROJECT_TYPE,PROJECT_EMAIL,DATE_RECEIVED,PROJECTS.DATE_COMPLETED,INVOICE_ID," +
    "IS_QUOTE_SENT,IS_DELIVERED,WORK_DETAILS,SPECIAL_INSTRUCTIONS,QUOTE_COMMENTS,VAT_RATE,PROMO_CODE,PRICE,PAYMENT_CLIENT,PAYMENT_TRANSLATOR,PAYMENT_PROOFREADER," +
    "WORKING_MANAGER_ID,CURRENCY,RATE_NO_MATCH,RATE_FUZZY_MATCH,RATE_REPS,SOURCE_WORDS_NOT_COUNTABLE,INITIAL_SOURCE_WORDS,TARGET_WORDS,BIG_PROJECT_COMMENTS," +
    "CLIENT_APPROVAL_STATUS,REOPENED_TIME,NEEDS_QA_REPORT,REOPEN_COMMENTS,REOPEN_RESPONSE,CANCEL_REASON,RESPONSIBLE_MANAGER,AREA_OF_EXPERTISE,HAS_PDF_FILES,HAS_REFERENCE_MATERIAL_AVAILABLE," +
    "OVERDUE_REASON,PRIORITY,REQUIRES_SUPPORT_ASSISTANCE,IS_QA_PROJECT,PREPAYMENT_STATUS,IS_NOTARIZED,IS_CERTIFIED,DELIVERY_COMMENTS,PREPAID_INVOICE_NUMBER," +
    "REQUEST_PO_HISTORY,REOPEN_UPDATES,REQUIRES_PDF_ASSISTANCE,REQUIRED_PREPAYMENT_PERCENT,TWILIO_STATUS,DEADLINE_COMMENTS,GENERAL_MANAGER_COMMENTS," +
    "USES_GLOSSARIES,SHOULD_BE_SENT_BY_POST,NOTARY_NUMBER,PAYMENT_DETAILS,CERTIFICATE_TYPE,CERTIFICATE_TYPE_OTHER,CERTIFICATE_COUNTRY," +
    "SHIPPING_METHOD,SHIPPING_COST,SHIPPING_IS_PAID,SHIPPING_PAYMENT_DETAILS,SHIPPING_WAS_REQUESTED_LATER,SHIPPING_TRACKING_NUMBER," +
    "SHIPPING_NAME,SHIPPING_DETAILS,SHIPPING_STREET,SHIPPING_CITY,SHIPPING_ZIP,SHIPPING_STATE,SHIPPING_COUNTRY,SHIPPING_PHONE," +
    "EXTRA_COSTS,EXTRA_COSTS_DETAILS,PAGES_COUNT,CERTIFIED_PRICE_PER_PAGE,PRINT_COPIES_COUNT,PRICE_PER_PRINT_COPY," +
    "CERTIFIED_PAYMENT_METHOD,CERTIFIED_BASE_PRICE,CERTIFIED_PRICE_PER_WORD,REQUESTED_SHIPPING_INFORMATION_DATE,IS_PROGRESS_WATCHED," +
    "CLIENT_REQUESTED_EXTRA_COPIES,ADDITIONAL_TRACKING_NUMBER,DIGITAL_CERTIFICATION_STATUS,WEBSITE_ORDER_ID," +
    "VIDEO_INTERPRETING_STATUS,TELEPHONE_INTERPRETING_STATUS,AUDIO_TRANSLATION_STATUS,AI_TRANSLATION_STATUS,UPWORK_ID,UPWORK_PRICE," +
    "STUDENT_DISCOUNT,STUDENT_EMAIL"

const clientDetailsFields =
    "CLIENTS.PK,CLIENT_NAME,NAME_TAG,CLIENT_GROUP,ADDRESS,COUNTRY_ID,DIVISION_ID,EMAILS,EMAIL_FOR_INVOICES,ACCOUNTING_EMAIL,COMMENTS,CLIENTS.SPECIAL_INSTRUCTIONS," +
    "INSTRUCTIONS_FOR_TRANSLATORS,VAT_NUMBER,HAS_NO_VAT_NUMBER,CONTACT,SOURCE,SOURCE_OTHER,PHONE_NUMBERS,IS_NOT_CALLABLE,WEBSITE," +
    "PORTAL_URL,PORTAL_USERNAME,PORTAL_PASSWORD,CLIENTS.PRICE,CLIENTS.CURRENCY,PAYER_TYPE,PAYMENT_TERMS,USERNAME,PASSWORD,CREATION_DATE,AFFILIATE_ID," +
    "IS_INVOICED_MONTHLY,IS_INVOICED_BY_POST,IS_INVOICED_ONLINE,IS_NOT_COLLECTABLE,HOLD_REMINDERS,IS_AGENCY,REQUIRES_PREPAYMENT,NO_PREPAID_QUOTES,PAYS_BY_CHECK"

const clientsListFieldsCompressed = "PK as A,CLIENT_NAME as B,NAME_TAG as C,DIVISION_ID as D,IS_LOCKED_FOR_PROJECTS as E,PAYER_TYPE as F,PAYMENT_TERMS as G"

const tableViews = {
    symbols: {
        ForManagers,
        ForTranslators
    },

    // Projects in progress (ie. not completed or cancelled) + completed that don't have the digital certificate sent
    PROJECTS_LIST: {
        ForManagers,
        uploadTokenGeneratorKey: "PROJECTS_FILES_MANAGERS",
        table: "PROJECTS",
        fields: projectsListFields,
        where:
            `STATUS IN (${$C.psSetup}, ${$C.psPending}, ${$C.psTranslation}, ${$C.psProofreading}, ${$C.psCheckPhase}, ${$C.psReopened}) ` +
            "OR (DIGITAL_CERTIFICATION_STATUS = 1 AND PREPAYMENT_STATUS = 2)"
    },

    COMPLETED_PROJECTS_FOR_CLIENT: {
        ForManagers,
        table: "PROJECTS",
        fields: projectsListFields,
        where: `STATUS IN (${$C.psQuote}, ${$C.psCompleted}, ${$C.psCompletedAfterReopen}, ${$C.psCancelled}) AND CLIENT_ID = '<#CLIENT_PK#>' AND CLIENT_ID > 0 ORDER BY PK DESC LIMIT 300`
    },

    PROJECTS_WITH_PENDING_REFUNDS: {
        ForManagers,
        table: "PROJECTS",
        fields: projectsListFields + ",PAYMENT_ID",
        join: "PROJECTS_REFUNDS ON PROJECT_ID = PROJECTS.PK AND PROJECTS_REFUNDS.DATE_COMPLETED = 0"
    },

    PROJECTS_WITH_CERTIFICATE_TYPE: {
        ForManagers,
        table: "PROJECTS",
        fields: projectsListFields,
        where: "CERTIFICATE_TYPE = <#CERTIFICATE_TYPE#> AND CERTIFICATE_COUNTRY = <#CERTIFICATE_COUNTRY#>"
    },

    PROJECTS_DETAILS: {
        ForManagers,
        table: "PROJECTS",
        fields:
            "PK,PROJECT_NUMBER,STATUS,IS_QUOTE_SENT,INVOICE_ID,CLIENT_ORDER_NUMBER,DEADLINE,DEADLINE_INTERMEDIATE,DEADLINE_TRANSLATOR,DEADLINE_PROOFREADER,DEADLINE_REOPENED,REOPENED_TIME,SOURCE_WORDS,WORDS_NO_MATCH,WORDS_FUZZY_MATCH,WORDS_REPS,WORKING_MANAGER_ID,CLIENT_ID,CAT_TOOLS,CAT_TOOLS_OTHER,SOURCE_LANGUAGE_ID,IS_BIG,PROJECT_TYPE,PROJECT_EMAIL,DATE_RECEIVED,DATE_COMPLETED,WORK_DETAILS,SPECIAL_INSTRUCTIONS,QUOTE_COMMENTS,OVERDUE_REASON,VAT_RATE,PROMO_CODE,PRICE,PAYMENT_CLIENT,PAYMENT_TRANSLATOR,PAYMENT_PROOFREADER,CURRENCY,RATE_NO_MATCH,RATE_FUZZY_MATCH,RATE_REPS,TRANSLATOR_PRICE,PROOFREADER_PRICE,SOURCE_WORDS_NOT_COUNTABLE,INITIAL_SOURCE_WORDS,TARGET_WORDS,BIG_PROJECT_COMMENTS,NEEDS_QA_REPORT,REOPEN_COMMENTS,REOPEN_RESPONSE,CANCEL_REASON,RESPONSIBLE_MANAGER,AREA_OF_EXPERTISE,HAS_PDF_FILES,HAS_REFERENCE_MATERIAL_AVAILABLE,PRIORITY,LATE_DELIVERY_INFORMED_COUNT,REQUIRES_SUPPORT_ASSISTANCE,IS_QA_PROJECT,PREPAYMENT_STATUS,IS_NOTARIZED,IS_CERTIFIED,IS_DELIVERED,IS_IMPORTANT,IS_PROGRESS_WATCHED,IS_ON_HOLD,DELIVERY_COMMENTS,PREPAID_INVOICE_NUMBER,REQUEST_PO_HISTORY,REOPEN_UPDATES,REQUIRES_PDF_ASSISTANCE,REQUIRED_PREPAYMENT_PERCENT,TWILIO_STATUS,DEADLINE_COMMENTS,GENERAL_MANAGER_COMMENTS,USES_GLOSSARIES,SHOULD_BE_SENT_BY_POST,ADDITIONAL_TRACKING_NUMBER,NOTARY_NUMBER,PAYMENT_DETAILS,CERTIFICATE_TYPE,CERTIFICATE_TYPE_OTHER,CERTIFICATE_COUNTRY,SHIPPING_METHOD,SHIPPING_COST,SHIPPING_IS_PAID,SHIPPING_PAYMENT_DETAILS,SHIPPING_WAS_REQUESTED_LATER,SHIPPING_TRACKING_NUMBER,SHIPPING_NAME,SHIPPING_DETAILS,SHIPPING_STREET,SHIPPING_CITY,SHIPPING_ZIP,SHIPPING_STATE,SHIPPING_COUNTRY,SHIPPING_PHONE,CLIENT_APPROVAL_STATUS,CLIENT_REQUESTED_EXTRA_COPIES,EXTRA_COSTS,EXTRA_COSTS_DETAILS,PAGES_COUNT,CERTIFIED_PRICE_PER_PAGE,PRINT_COPIES_COUNT,PRICE_PER_PRINT_COPY,CERTIFIED_PAYMENT_METHOD,CERTIFIED_BASE_PRICE,CERTIFIED_PRICE_PER_WORD,IMPORTANT_INFORMATION,INITIAL_SERVICES_COST,DIGITAL_CERTIFICATION_STATUS,REQUESTED_SHIPPING_INFORMATION_DATE,VIDEO_INTERPRETING_STATUS,TELEPHONE_INTERPRETING_STATUS,AUDIO_TRANSLATION_STATUS,AI_TRANSLATION_STATUS,TEMPLATE_EDITOR_LINK,UPWORK_ID,UPWORK_PRICE"
    },

    RECENT_QUOTES: {
        ForManagers,
        table: "PROJECTS",
        fields: projectsListFields,
        where: `STATUS = ${$C.psQuote} ORDER BY PK DESC LIMIT 100`
    },

    SUBPROJECTS_FOR_PROJECT: {
        ForManagers,
        table: "SUBPROJECTS",
        fields: "PK,PROJECT_ID,LANGUAGE_ID,INTERMEDIATE_LANGUAGE_ID,IS_REOPENED,ALLOW_PROOFREADERS_SPECIAL",
        key: "PROJECT_ID"
    },

    SUBPROJECTS_DETAILS: {
        ForManagers,
        table: "SUBPROJECTS",
        fields: "PK,PROJECT_ID,LANGUAGE_ID,INTERMEDIATE_LANGUAGE_ID,IS_REOPENED,ALLOW_PROOFREADERS_SPECIAL"
    },

    PROJECTS_HISTORY_FOR_PROJECT: {
        ForManagers,
        table: "PROJECTS_HISTORY",
        fields: "PK,PROJECT_ID,EMPLOYEE_ID,ACTION,DATE,DETAILS",
        key: "PROJECT_ID"
    },

    TRANSLATIONS_FOR_PROJECT: {
        ForManagers,
        table: "TRANSLATIONS",
        fields:
            "TRANSLATIONS.PK,EMPLOYEE_ID,SUBPROJECT_ID,REPLY,REPLY_COMMENTS,STATUS,STATUS_TEXT,CONFIRMED,COMMENTS,PAYMENT_SHEET_ID,PAYMENT_METHOD,PRICE,TARGET_WORDS,UNASSIGN_REASON,AMOUNT_CORRECTION,AMOUNT_CORRECTION_PERCENT,UPLOADED_ALL_FILES,TIME_ASSIGNED,WATCH_STATUS,UNASSIGNED_AFTER_REOPEN,WAS_LATE",
        join: "INNER JOIN subprojects ON translations.subproject_id = subprojects.pk AND subprojects.project_id in (<$PKs$>)"
    },

    TRANSLATIONS_FOR_PAYMENT_SHEET: {
        ForManagers,
        table: "TRANSLATIONS",
        fields:
            "TRANSLATIONS.PK,EMPLOYEE_ID,SUBPROJECT_ID,REPLY,REPLY_COMMENTS,TRANSLATIONS.STATUS,STATUS_TEXT,CONFIRMED,COMMENTS,PAYMENT_SHEET_ID,PAYMENT_METHOD,TRANSLATIONS.PRICE,TRANSLATIONS.TARGET_WORDS,UNASSIGN_REASON,AMOUNT_CORRECTION,AMOUNT_CORRECTION_PERCENT,UPLOADED_ALL_FILES,TIME_ASSIGNED,WATCH_STATUS,UNASSIGNED_AFTER_REOPEN,WAS_LATE",
        key: "PAYMENT_SHEET_ID"
    },

    SUBPROJECTS_FOR_PAYMENT_SHEET: {
        ForManagers,
        table: "SUBPROJECTS",
        fields: "SUBPROJECTS.PK,PROJECT_ID",
        join: "INNER JOIN translations ON translations.subproject_id = subprojects.pk AND translations.payment_sheet_id in (<$PKs$>)"
    },

    PROJECTS_FOR_PAYMENT_SHEET: {
        ForManagers,
        table: "PROJECTS",
        fields: "PROJECTS.PK,PROJECT_NUMBER,SOURCE_WORDS,WORDS_NO_MATCH,WORDS_FUZZY_MATCH,WORDS_REPS",
        join:
            "INNER JOIN subprojects ON project_id = projects.pk INNER JOIN translations ON translations.subproject_id = subprojects.pk AND translations.payment_sheet_id in (<$PKs$>)"
    },

    PROJECTS_FOR_TWILIO_MESSAGES: {
        ForManagers,
        table: "PROJECTS",
        fields: "PROJECTS.PK,PROJECT_NUMBER",
        join: "INNER JOIN clients ON last_twilio_project_id = projects.pk"
    },

    PAYMENT_SHEETS_DETAILS: {
        ForManagers,
        table: "PAYMENT_SHEETS",
        fields: "PK,COMMENTS,EMPLOYEE_COMMENTS,EXTRA_AMOUNT,INVOICE_FILE_NAME,TEST_TRANSLATIONS_COUNT"
    },

    EMPLOYEES_PAYMENT_CORRECTIONS_FOR_EMPLOYEE: {
        ForManagers,
        table: "EMPLOYEES_PAYMENT_CORRECTIONS",
        fields: "PK,EMPLOYEE_ID,MANAGER_ID,PROJECT,AMOUNT,COMMENTS,IS_APPROVED",
        key: "EMPLOYEE_ID"
    },

    TRANSLATIONS_DETAILS: {
        ForManagers,
        table: "TRANSLATIONS",
        fields:
            "PK,EMPLOYEE_ID,SUBPROJECT_ID,REPLY,REPLY_COMMENTS,STATUS,STATUS_TEXT,CONFIRMED,COMMENTS,PAYMENT_METHOD,PRICE,TARGET_WORDS,UNASSIGN_REASON,AMOUNT_CORRECTION,AMOUNT_CORRECTION_PERCENT,UPLOADED_ALL_FILES,TIME_ASSIGNED,WATCH_STATUS,UNASSIGNED_AFTER_REOPEN,WAS_LATE"
    },

    SUBPROJECTS_FOR_OPEN_PROJECTS: {
        ForManagers,
        table: "SUBPROJECTS",
        fields: "SUBPROJECTS.PK,PROJECT_ID,LANGUAGE_ID,INTERMEDIATE_LANGUAGE_ID,IS_REOPENED",
        join: "INNER JOIN projects ON project_id = projects.pk AND projects.STATUS in (3, 4, 5, 6, 7)"
    },

    ASSIGNED_TRANSLATIONS_FOR_OPEN_PROJECTS: {
        ForManagers,
        table: "TRANSLATIONS",
        fields: "TRANSLATIONS.PK,SUBPROJECT_ID,EMPLOYEE_ID,TRANSLATIONS.STATUS,REPLY_COMMENTS,TRANSLATIONS.TARGET_WORDS,CONFIRMED,UPLOADED_ALL_FILES,WATCH_STATUS",
        join:
            "INNER JOIN subprojects ON translations.subproject_id = subprojects.pk INNER JOIN projects ON subprojects.project_id = projects.pk AND projects.STATUS in (3, 4, 5, 6, 7) AND translations.STATUS > 0"
    },

    EMPLOYEES_FOR_OPEN_PROJECTS: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "EMPLOYEES.PK,EMPLOYEE_TYPE,ONLINE_STATUS,FIRST_NAME,LAST_NAME",
        join:
            "INNER JOIN translations ON employee_id = employees.pk INNER JOIN subprojects ON translations.subproject_id = subprojects.pk INNER JOIN projects ON subprojects.project_id = projects.pk AND projects.STATUS in (3, 4, 5, 6, 7) AND translations.STATUS > 0"
    },

    EMPLOYEES_WITH_SPECIAL_RATES: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "EMPLOYEES.PK,EMPLOYEE_TYPE,ONLINE_STATUS,FIRST_NAME,LAST_NAME,RATE_TRANSLATION,RATE_PROOFREADING",
        where: "RATE_TRANSLATION > 0.03 OR RATE_PROOFREADING > 0.005"
    },

    INVOICE_FOR_PROJECT: {
        ForManagers,
        table: "INVOICES",
        fields: "INVOICES.PK,INVOICE_NUMBER,IS_MONTHLY,INVOICES.STATUS,INVOICES.CLIENT_ID,IS_USA_SPECIAL",
        join: "JOIN projects ON invoices.pk = projects.invoice_id AND projects.pk = <$PKs$>"
    },

    INVOICE_REMINDERS_FOR_CLIENT: {
        ForManagers,
        table: "INVOICE_REMINDERS",
        fields: "INVOICE_REMINDERS.PK,INVOICE_ID,DATE,CLIENT_ID,INVOICE_NUMBER,IS_USA_SPECIAL,IS_MONTHLY",
        join: "JOIN invoices ON invoices.pk = invoice_id AND client_id = <$PKs$>"
    },

    INVOICE_REMINDERS_FOR_INVOICE: {
        ForManagers,
        table: "INVOICE_REMINDERS",
        fields: "PK,INVOICE_ID,DATE",
        where: "INVOICE_ID = <$PKs$>"
    },

    PROJECTS_MESSAGES_FOR_PROJECT: {
        ForManagers,
        table: "PROJECTS_MESSAGES",
        fields: "PK,PROJECT_ID,SUBPROJECT_ID,TRANSLATION_ID,SENDER,RECIPIENT,MESSAGE,MESSAGE_TIME,IS_READ,IS_PROBLEM,IN_REPLY_TO,COMPLETED_BY,COMPLETED_TIME,PREVIEW",
        key: "PROJECT_ID"
    },

    PROJECTS_SERVICES_FOR_PROJECT: {
        ForManagers,
        table: "PROJECTS_SERVICES",
        fields:
            "PK,PROJECT_ID,SERVICE_TYPE,SERVICE_DATE,SERVICE_DETAILS,WAS_INITIAL,ITEM_COUNT,IS_PAID,IS_COMPLETED,COST,SHIPPING_METHOD,SHIPPING_DATE,SHIPPING_TRACKING_NUMBER,' + 'SHIPPING_NAME,SHIPPING_DETAILS,SHIPPING_STREET,SHIPPING_CITY,SHIPPING_ZIP,SHIPPING_STATE,SHIPPING_COUNTRY,SHIPPING_PHONE,REQUESTED_SHIPPING_INFORMATION_DATE",
        key: "PROJECT_ID"
    },

    PROJECTS_PAYMENTS_FOR_PROJECT: {
        ForManagers,
        table: "PROJECTS_PAYMENTS",
        fields: "PK,PROJECT_ID,AMOUNT,DATE,PAYMENT_ID,EMAIL,DETAILS,METHOD",
        key: "PROJECT_ID"
    },

    PROJECTS_PAYMENTS_FOR_UNPAID_INVOICES: {
        ForManagers,
        table: "PROJECTS_PAYMENTS",
        fields: "PROJECTS_PAYMENTS.PK,PROJECT_ID,AMOUNT,DATE,PAYMENT_ID,EMAIL,DETAILS,METHOD,INVOICE_ID",
        join: "INNER JOIN PROJECTS ON PROJECT_ID = PROJECTS.PK INNER JOIN INVOICES ON INVOICE_ID = INVOICES.PK AND INVOICES.STATUS <> 1 AND INVOICES.CLIENT_ID = <$PKs$>"
    },

    PROJECTS_REFUNDS_FOR_PROJECT: {
        ForManagers,
        table: "PROJECTS_REFUNDS",
        fields: "PK,PROJECT_ID,AMOUNT,REASON,PAYMENT_METHOD,PAYMENT_ID,DATE_COMPLETED",
        key: "PROJECT_ID"
    },

    PROJECTS_MESSAGES_WITH_PROBLEM: {
        ForManagers,
        table: "PROJECTS_MESSAGES",
        fields: "PK,PROJECT_ID,SUBPROJECT_ID,SENDER,RECIPIENT,MESSAGE_TIME,IS_PROBLEM,PREVIEW,CLAIMED_BY",
        where: "IS_PROBLEM = 1 and SENDER <> 'CCM' and RECIPIENT <> 'CCM' and RECIPIENT <> 'FC' and RECIPIENT <> 'FCY' and RECIPIENT <> 'FCN'"
    },

    PROJECTS_MESSAGES_DETAILS: {
        ForManagers,
        table: "PROJECTS_MESSAGES",
        fields: "PK,MESSAGE,COMPLETED_BY,COMPLETED_TIME,IS_READ"
    },

    PROJECTS_FOR_PROJECTS_MESSAGES: {
        ForManagers,
        table: "PROJECTS",
        fields: "DISTINCT PROJECTS.PK,PROJECT_NUMBER,IS_CERTIFIED,PROJECTS.CLAIMED_BY",
        join: "JOIN projects_messages ON projects.pk = projects_messages.project_id AND is_problem = 1"
    },

    SUBPROJECTS_FOR_PROJECTS_MESSAGES: {
        ForManagers,
        table: "SUBPROJECTS",
        fields: "DISTINCT SUBPROJECTS.PK,LANGUAGE_ID",
        join: "JOIN projects_messages ON subprojects.pk = projects_messages.subproject_id AND is_problem = 1"
    },

    EMPLOYEES_FOR_PROJECT_MESSAGES_LIST: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        join: "JOIN projects_messages ON (sender = employees.pk OR recipient = employees.pk) AND is_problem = 1"
    },

    PROJECTS_FILES_FOR_PROJECT: {
        ForManagers,
        table: "PROJECTS_FILES",
        fields:
            "PK,PROJECT_ID,SUBPROJECT_ID,FILE_TYPE,FILE_NAME,SIZE,EMPLOYEE_ID,UPLOAD_TIME,PREFIX,CONTENTS,CONTENTS_OTHER,COMMENTS,CLIENT_APPROVAL_STATUS,FILE_WAS_CHECKED_WITH_GRAMMARLY,ONLINE_EDITOR_LINK,ONLINE_CHECKED_BY",
        key: "PROJECT_ID"
    },

    PROJECTS_FILES_DETAILS: {
        ForManagers,
        table: "PROJECTS_FILES",
        fields: "PK,PROJECT_ID,CLIENT_APPROVAL_STATUS"
    },

    EMPLOYEES_FOR_PROJECT_FILES: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        join: "JOIN projects_files ON employees.pk = projects_files.employee_id AND projects_files.project_id = <$PKs$>"
    },

    EMPLOYEES_FOR_PROJECT_TRANSLATIONS: {
        ForManagers,
        table: "EMPLOYEES",
        fields:
            "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,IS_NOT_AVAILABLE,AVAILABILITY,AWAY_MESSAGE,IS_NEW_TRANSLATOR,IS_BELGIAN,LAST_LOGIN_TIME,PLUS_POINTS,MINUS_POINTS,POINTS_COMMENTS,RESPONSIVENESS,EMPLOYEES.CAT_TOOLS,RATE_TRANSLATION,RATE_PROOFREADING,LATE_DELIVERIES_STATUS",
        join:
            "JOIN translations ON employee_id = employees.pk JOIN subprojects ON subproject_id = subprojects.pk JOIN projects ON project_id = projects.pk AND project_id = <$PKs$>"
    },

    EMPLOYEES_THAT_COULD_TRANSLATE_PROJECT: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES",
        fields:
            "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,IS_NOT_AVAILABLE,AVAILABILITY,AWAY_MESSAGE,IS_NEW_TRANSLATOR,IS_BELGIAN,LAST_LOGIN_TIME,PLUS_POINTS,MINUS_POINTS,POINTS_COMMENTS,RESPONSIVENESS,EMPLOYEES.CAT_TOOLS,RATE_TRANSLATION,RATE_PROOFREADING,LATE_DELIVERIES_STATUS,NATIVE_LANGUAGE_1_ID,NATIVE_LANGUAGE_2_ID",
        join:
            "JOIN employees_languages ON employees_languages.employee_id = employees.pk AND employees.employee_type = 1 JOIN subprojects ON language_id = employees_languages.target_language_id JOIN projects ON project_id = projects.pk AND projects.SOURCE_LANGUAGE_ID = employees_languages.source_language_id AND project_id = <$PKs$>"
    },

    EMPLOYEES_THAT_COULD_PROOFREAD_SPECIAL_PROJECT: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES",
        fields:
            "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,IS_NOT_AVAILABLE,IS_NEW_TRANSLATOR,IS_BELGIAN,LAST_LOGIN_TIME,PLUS_POINTS,MINUS_POINTS,POINTS_COMMENTS,RESPONSIVENESS,EMPLOYEES.CAT_TOOLS,RATE_TRANSLATION,RATE_PROOFREADING,LATE_DELIVERIES_STATUS,NATIVE_LANGUAGE_1_ID,NATIVE_LANGUAGE_2_ID",
        join:
            "JOIN subprojects ON (language_id = employees.native_language_1_id OR language_id = employees.native_language_2_id) AND employees.employee_type = 1 JOIN projects ON project_id = projects.pk AND project_id = <$PKs$>"
    },

    EMPLOYEES_LANGUAGES_FOR_EMPLOYEES_THAT_COULD_TRANSLATE_PROJECT: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES_LANGUAGES",
        fields: "DISTINCT EMPLOYEES_LANGUAGES.PK,EMPLOYEE_ID,EMPLOYEES_LANGUAGES.SOURCE_LANGUAGE_ID,EMPLOYEES_LANGUAGES.TARGET_LANGUAGE_ID",
        join:
            "JOIN employees ON employees_languages.employee_id = employees.pk AND employees.employee_type = 1 JOIN subprojects ON language_id = employees_languages.target_language_id JOIN projects ON project_id = projects.pk AND projects.SOURCE_LANGUAGE_ID = employees_languages.source_language_id AND project_id = <$PKs$>"
    },

    EMPLOYEES_LANGUAGES_FOR_PROJECT_WITH_INTERMEDIATE_LANGUAGE_1: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES_LANGUAGES",
        fields: "DISTINCT EMPLOYEES_LANGUAGES.PK,EMPLOYEE_ID,EMPLOYEES_LANGUAGES.SOURCE_LANGUAGE_ID,EMPLOYEES_LANGUAGES.TARGET_LANGUAGE_ID",
        join:
            "JOIN employees ON employees_languages.employee_id = employees.pk AND employees.employee_type = 1 JOIN subprojects ON intermediate_language_id = employees_languages.target_language_id JOIN projects ON project_id = projects.pk AND projects.SOURCE_LANGUAGE_ID = employees_languages.source_language_id AND project_id = <$PKs$>"
    },

    EMPLOYEES_LANGUAGES_FOR_PROJECT_WITH_INTERMEDIATE_LANGUAGE_2: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES_LANGUAGES",
        fields: "DISTINCT EMPLOYEES_LANGUAGES.PK,EMPLOYEE_ID,EMPLOYEES_LANGUAGES.SOURCE_LANGUAGE_ID,EMPLOYEES_LANGUAGES.TARGET_LANGUAGE_ID",
        join:
            "JOIN employees ON employees_languages.employee_id = employees.pk AND employees.employee_type = 1 JOIN subprojects ON intermediate_language_id = employees_languages.source_language_id AND subprojects.language_id = employees_languages.target_language_id JOIN projects ON project_id = projects.pk AND project_id = <$PKs$>"
    },

    EMPLOYEES_FOR_PROJECT_MESSAGES: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        join: "JOIN projects_messages ON (sender = employees.pk OR recipient = employees.pk) AND projects_messages.project_id = <$PKs$>"
    },

    EMPLOYEES_FOR_PROJECT_HISTORY: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        join: "JOIN projects_history ON employee_id = employees.pk AND projects_history.project_id = <$PKs$>"
    },

    EMPLOYEES_LIST: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "PK,EMPLOYEE_TYPE,FIRST_NAME,LAST_NAME,ONLINE_STATUS,NAME_CODE,MANAGER_TYPE,LAST_LOGIN_TIME",
        where: "EMPLOYEE_TYPE = 0 OR EMPLOYEE_TYPE = 2"
    },

    EMPLOYEES_DETAILS: {
        ForManagers,
        table: "EMPLOYEES",
        fields:
            "PK,EMPLOYEE_TYPE,FIRST_NAME,LAST_NAME,ONLINE_STATUS,NAME_CODE,MANAGER_TYPE,ACCEPTED_CONFIDENTIALITY_AGREEMENT,LAST_LOGIN_TIME,NAME_CODE,EMAIL,NATIVE_LANGUAGE_1_ID,NATIVE_LANGUAGE_2_ID,IS_VIDEO_INTERPRETER,IS_PHONE_INTERPRETER,IS_BELGIAN,GENDER,ADDRESS,COUNTRY_ID,RATE_TRANSLATION,RATE_PROOFREADING,IS_NOT_AVAILABLE,AVAILABILITY,MINUS_POINTS,PLUS_POINTS,POINTS_COMMENTS,RESPONSIVENESS,CHECKS_TESTS,WORK_REFERENCES,EXPERIENCE,DICTIONARIES,DIPLOMA_FILE_NAME,RESUME_FILE_NAME,CAT_TOOLS,PAYMENT_METHOD,PAYPAL_EMAIL,SMS_CREDIT,TRANSLATION_AREAS,TRANSLATION_AREAS_OTHER,COMMENTS,PHONE_NUMBER,MOBILE_NUMBER,SKYPE_ID,DISABLE_REASON,AMOUNT_FOR_SMS,PAYMENT_COMMENTS,PAYONEER_STATUS,AWAY_MESSAGE,UTC_OFFSET,COMPANY,TELEGRAM_ID,TELEGRAM_WHEN_ONLINE,AFFILIATE_RATE_EUR,AFFILIATE_RATE_USD,AFFILIATE_RATE_FIXED_PERCENT,AFFILIATE_DIVISION_ID,MANAGER_TYPE,IS_NEW_TRANSLATOR,ACCEPTED_DATE,LATE_DELIVERIES_STATUS,SETTINGS"
    },

    EMPLOYEES_DETAILS_FULL: {
        ForManagers,
        table: "EMPLOYEES",
        fields:
            "PK,EMPLOYEE_TYPE,FIRST_NAME,LAST_NAME,ONLINE_STATUS,NAME_CODE,MANAGER_TYPE,ACCEPTED_CONFIDENTIALITY_AGREEMENT,LAST_LOGIN_TIME,NAME_CODE,EMAIL,NATIVE_LANGUAGE_1_ID,NATIVE_LANGUAGE_2_ID,IS_VIDEO_INTERPRETER,IS_PHONE_INTERPRETER,IS_BELGIAN,GENDER,ADDRESS,COUNTRY_ID,RATE_TRANSLATION,RATE_PROOFREADING,IS_NOT_AVAILABLE,AVAILABILITY,MINUS_POINTS,PLUS_POINTS,POINTS_COMMENTS,RESPONSIVENESS,CHECKS_TESTS,WORK_REFERENCES,EXPERIENCE,DICTIONARIES,DIPLOMA_FILE_NAME,RESUME_FILE_NAME,CAT_TOOLS,PAYMENT_METHOD,PAYPAL_EMAIL,SMS_CREDIT,TRANSLATION_AREAS,TRANSLATION_AREAS_OTHER,COMMENTS,PHONE_NUMBER,MOBILE_NUMBER,SKYPE_ID,DISABLE_REASON,AMOUNT_FOR_SMS,PAYMENT_COMMENTS,PAYONEER_STATUS,AWAY_MESSAGE,UTC_OFFSET,COMPANY,TELEGRAM_ID,TELEGRAM_WHEN_ONLINE,AFFILIATE_RATE_EUR,AFFILIATE_RATE_USD,AFFILIATE_RATE_FIXED_PERCENT,AFFILIATE_DIVISION_ID,MANAGER_TYPE,IS_NEW_TRANSLATOR,ACCEPTED_DATE,LATE_DELIVERIES_STATUS,SETTINGS"
    },

    EMPLOYEES_DETAILS_SELF: {
        ForManagers,
        table: "EMPLOYEES",
        fields:
            "PK,EMPLOYEE_TYPE,FIRST_NAME,LAST_NAME,ONLINE_STATUS,ACCEPTED_CONFIDENTIALITY_AGREEMENT,LAST_LOGIN_TIME,NAME_CODE,EMAIL,NATIVE_LANGUAGE_1_ID,NATIVE_LANGUAGE_2_ID,IS_VIDEO_INTERPRETER,IS_PHONE_INTERPRETER,IS_BELGIAN,GENDER,ADDRESS,COUNTRY_ID,RATE_TRANSLATION,RATE_PROOFREADING,IS_NOT_AVAILABLE,AVAILABILITY,MINUS_POINTS,PLUS_POINTS,POINTS_COMMENTS,RESPONSIVENESS,CHECKS_TESTS,WORK_REFERENCES,EXPERIENCE,DICTIONARIES,DIPLOMA_FILE_NAME,RESUME_FILE_NAME,CAT_TOOLS,PAYMENT_METHOD,PAYPAL_EMAIL,SMS_CREDIT,TRANSLATION_AREAS,TRANSLATION_AREAS_OTHER,COMMENTS,PHONE_NUMBER,MOBILE_NUMBER,SKYPE_ID,DISABLE_REASON,AMOUNT_FOR_SMS,PAYMENT_COMMENTS,PAYONEER_STATUS,AWAY_MESSAGE,UTC_OFFSET,COMPANY,TELEGRAM_ID,TELEGRAM_WHEN_ONLINE,AFFILIATE_RATE_EUR,AFFILIATE_RATE_USD,AFFILIATE_RATE_FIXED_PERCENT,AFFILIATE_DIVISION_ID,MANAGER_TYPE,IS_NEW_TRANSLATOR,ACCEPTED_DATE,LATE_DELIVERIES_STATUS,SETTINGS,PREFERENCES,PERMISSIONS"
    },

    EMPLOYEES_DETAILS_FOR_CHAT: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS"
    },

    EMPLOYEES_LANGUAGES: {
        ForManagers,
        table: "EMPLOYEES_LANGUAGES",
        key: "EMPLOYEE_ID",
        fields: "PK,EMPLOYEE_ID,SOURCE_LANGUAGE_ID,TARGET_LANGUAGE_ID"
    },

    EMPLOYEES_PAYMENT_SHEETS: {
        ForManagers,
        table: "PAYMENT_SHEETS",
        key: "EMPLOYEE_ID",
        fields: "PK,EMPLOYEE_ID,PAYMENT_STATUS,MONTH,YEAR,COMMENTS,EMPLOYEE_COMMENTS,EXTRA_AMOUNT,INVOICE_FILE_NAME,TEST_TRANSLATIONS_COUNT"
    },

    EMPLOYEES_PENDING_CHATS: {
        ForManagers,
        table: "PENDING_CHATS",
        fields: "PENDING_CHATS.PK,FROM_ID,TO_ID,TIME,ANSWERED_TIME,FIRST_NAME,LAST_NAME",
        join: "JOIN EMPLOYEES ON FROM_ID = EMPLOYEES.PK AND TO_ID = <$PKs$>"
    },

    EMPLOYEES_HOLIDAYS: {
        ForManagers,
        table: "EMPLOYEES_HOLIDAYS",
        fields: "PK,EMPLOYEE_ID,DATE,IS_HALF_DAY"
    },

    EMPLOYEES_FOR_EMPLOYEES_HOLIDAYS: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        join: "JOIN employees_holidays ON employee_id = employees.pk"
    },

    MB_THREADS: {
        ForManagers,
        table: "MB_THREADS",
        fields: "MB_THREADS.PK,EMPLOYEE_ID,DATE,SUBJECT,IS_STICKY,LANGUAGE_ID,CONCAT(FIRST_NAME, ' ', LAST_NAME) AS AUTHOR",
        join: "JOIN EMPLOYEES ON EMPLOYEE_ID = EMPLOYEES.PK"
    },

    MB_THREADS_TR: {
        ForTranslators,
        AllowsCriteria, // It doesn't have any criteria, but it's needed because the tableView is loaded using REQUEST_OBJECTS
        table: "MB_THREADS",
        fields: "MB_THREADS.PK,EMPLOYEE_ID,DATE,SUBJECT,IS_STICKY,LANGUAGE_ID,CONCAT(FIRST_NAME, ' ', LAST_NAME) AS AUTHOR",
        join: "EMPLOYEES ON EMPLOYEE_ID = EMPLOYEES.PK"
    },

    MB_POSTS: {
        ForManagers,
        ForTranslators,
        table: "MB_POSTS",
        fields: "MB_POSTS.PK,MB_THREAD_ID,EMPLOYEE_ID,TEXT,DATE,CONCAT(FIRST_NAME, ' ', LAST_NAME) AS AUTHOR",
        join: "JOIN EMPLOYEES ON EMPLOYEE_ID = EMPLOYEES.PK AND MB_THREAD_ID = <$PKs$>"
    },

    EMPLOYEES_FOR_MB_THREAD: {
        ForManagers,
        ForTranslators,
        table: "EMPLOYEES",
        fields: "DISTINCT EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE",
        join: "JOIN mb_posts ON employees.pk = mb_posts.employee_id AND mb_posts.mb_thread_id = <$PKs$>"
    },

    EMPLOYEES_MESSAGES: {
        ForManagers,
        ForTranslators,
        Unlistenable,
        table: "EMPLOYEES_MESSAGES",
        fields: "EMPLOYEES_MESSAGES.PK,FROM_ID,TO_ID,FROM_CLIENT_ID,MESSAGE,MESSAGE_TIME,IS_READ,CONCAT(FIRST_NAME, ' ', LAST_NAME) AS SENDER_NAME",
        join: "JOIN EMPLOYEES ON FROM_ID = EMPLOYEES.PK AND TO_ID = <#EMPLOYEE_ID#> ORDER BY EMPLOYEES_MESSAGES.PK DESC LIMIT 100"
    },

    EMPLOYEES_FILES: {
        ForManagers,
        ForTranslators,
        Unlistenable,
        uploadTokenGeneratorKey: "EMPLOYEES_FILES",
        table: "EMPLOYEES_FILES",
        fields: "EMPLOYEES_FILES.PK,FROM_ID,TO_ID,FILE_NAME,SIZE,UPLOAD_TIME,IS_DOWNLOADED,CONCAT(FIRST_NAME, ' ', LAST_NAME) AS SENDER_NAME",
        join: "JOIN EMPLOYEES ON FROM_ID = EMPLOYEES.PK AND TO_ID = <#EMPLOYEE_ID#> ORDER BY EMPLOYEES_FILES.PK DESC LIMIT 100"
    },

    // The clients are split in multiple lists, as some managers with slower connections
    // get disconnected when downloading a tableView that contains too much data
    CLIENTS_LIST_SMALL_1: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 0 AND PK <= 5000"
    },

    CLIENTS_LIST_SMALL_2: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 5000 AND PK <= 10000"
    },

    CLIENTS_LIST_SMALL_3: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 10000 AND PK <= 15000"
    },

    CLIENTS_LIST_SMALL_4: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 15000 AND PK <= 20000"
    },

    CLIENTS_LIST_SMALL_5: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 20000 AND PK <= 25000"
    },

    CLIENTS_LIST_SMALL_6: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 25000 AND PK <= 30000"
    },

    CLIENTS_LIST_SMALL_7: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 30000 AND PK <= 35000"
    },

    CLIENTS_LIST_SMALL_8: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 35000 AND PK <= 40000"
    },

    CLIENTS_LIST_SMALL_9: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 40000 AND PK <= 45000"
    },

    CLIENTS_LIST_SMALL_10: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS,NO_PREPAID_QUOTES",
        fieldsCompressed: clientsListFieldsCompressed,
        where: "PK > 45000"
    },

    CLIENTS_FOR_OPENED_PROJECTS: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,NAME_TAG,DIVISION_ID,IS_LOCKED_FOR_PROJECTS,PAYER_TYPE,PAYMENT_TERMS",
        join:
            `JOIN PROJECTS ON CLIENTS.PK = CLIENT_ID AND STATUS IN (${$C.psSetup}, ${$C.psPending}, ${$C.psTranslation}, ${$C.psProofreading}, ${$C.psCheckPhase}, ${$C.psReopened}) ` +
            `OR (STATUS IN (${$C.psCompleted}, ${$C.psCompletedAfterReopen}) AND SHIPPING_METHOD > 0 AND TRIM(SHIPPING_TRACKING_NUMBER) = '')`
    },

    CLIENT_DETAILS_FOR_NEW_PROJECT: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,EMAILS,SPECIAL_INSTRUCTIONS,DIVISION_ID,PRICE,CURRENCY,REQUIRES_PREPAYMENT,NO_PREPAID_QUOTES,PAYS_BY_CHECK"
    },

    CLIENTS_LAST_TWILIO_PROJECT_ID: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,LAST_TWILIO_PROJECT_ID",
        where: "LAST_TWILIO_PROJECT_ID > 0"
    },

    CLIENTS_INVOICED_ONLINE: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,IS_INVOICED_ONLINE",
        where: "IS_INVOICED_ONLINE > 0"
    },

    PROJECTS_FOR_INVOICES_WITH_PARTIAL_PREPAYMENT: {
        ForManagers,
        table: "PROJECTS",
        fields: "PK,REQUIRED_PREPAYMENT_PERCENT,INVOICE_ID",
        where: "REQUIRED_PREPAYMENT_PERCENT > 0 AND REQUIRED_PREPAYMENT_PERCENT < 100 AND INVOICE_ID > 0"
    },

    CLIENTS_DETAILS: {
        ForManagers,
        table: "CLIENTS",
        fields: clientDetailsFields
    },

    CLIENTS_FILES: {
        ForManagers,
        uploadTokenGeneratorKey: "CLIENTS_FILES_MANAGERS",
        table: "CLIENTS_FILES",
        fields: "PK,CLIENT_ID,FILE_NAME,SIZE"
    },

    CLIENT_DETAILS_FOR_PROJECT: {
        ForManagers,
        table: "CLIENTS",
        fields: clientDetailsFields,
        join: "JOIN PROJECTS ON CLIENTS.PK = CLIENT_ID AND PROJECTS.PK = <$PKs$>"
    },

    CLIENTS_WITH_EMAIL_FOR_NEW_PROJECT: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,CLIENT_NAME,EMAILS,SPECIAL_INSTRUCTIONS,DIVISION_ID,PRICE,CURRENCY,IS_LOCKED_FOR_PROJECTS",
        where: "EMAILS LIKE '%<#EMAIL#>%' LIMIT 100"
    },

    CLIENTS_WITH_EMAIL: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,EMAILS,ACCOUNTING_EMAIL,EMAIL_FOR_INVOICES",
        where: "EMAILS LIKE '%<#EMAIL#>%' OR ACCOUNTING_EMAIL LIKE '%<#EMAIL#>%' OR EMAIL_FOR_INVOICES LIKE '%<#EMAIL#>%' LIMIT 100"
    },

    CLIENTS_WITH_PAYS_BY_CHECK: {
        ForManagers,
        table: "CLIENTS",
        fields: "PK,PAYS_BY_CHECK",
        where: "PAYS_BY_CHECK = 1"
    },

    PROJECTS_WITH_PROJECT_NUMBER: {
        ForManagers,
        table: "PROJECTS",
        fields: "PK,PROJECT_NUMBER",
        where: "PROJECT_NUMBER LIKE '%-<#PROJECT_NUMBER#>' ORDER BY PK LIMIT 10"
    },

    EMPLOYEES_WITH_NAME: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        where: "CONCAT(FIRST_NAME, ' ', LAST_NAME) LIKE '%<#FULL_NAME#>%' ORDER BY FIRST_NAME, LAST_NAME LIMIT 20"
    },

    DISABLED_EMPLOYEES_WITH_NAME: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,ACCEPTED_CONFIDENTIALITY_AGREEMENT",
        where: "CONCAT(FIRST_NAME, ' ', LAST_NAME) = '<#FULL_NAME#>' AND EMPLOYEE_TYPE = 3 AND ACCEPTED_CONFIDENTIALITY_AGREEMENT > 0 LIMIT 20"
    },

    ALL_EMPLOYEES_WITH_NAME: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        where: "CONCAT(FIRST_NAME, ' ', LAST_NAME) LIKE '%<#FULL_NAME#>%' ORDER BY EMPLOYEE_TYPE LIMIT 300"
    },

    EMPLOYEES_WITH_EMAIL: {
        ForManagers,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,EMAIL,PAYPAL_EMAIL",
        where: "EMAIL LIKE '%<#EMAIL#>%' OR PAYPAL_EMAIL LIKE '%<#EMAIL#>%' ORDER BY FIRST_NAME, LAST_NAME LIMIT 20"
    },

    EMPLOYEES_WITH_NATIVE_LANGUAGE: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,NATIVE_LANGUAGE_1_ID,NATIVE_LANGUAGE_2_ID",
        where:
            "((NATIVE_LANGUAGE_1_ID = '<#NATIVE_LANGUAGE#>' AND NATIVE_LANGUAGE_1_ID > 0) OR (NATIVE_LANGUAGE_2_ID = '<#NATIVE_LANGUAGE#>' AND NATIVE_LANGUAGE_2_ID > 0)) AND (EMPLOYEE_TYPE = 0 OR EMPLOYEE_TYPE = 1)"
    },

    EMPLOYEES_WITH_LANGUAGE_PAIR: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES",
        fields: "EMPLOYEES.PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS",
        join:
            "employees_languages ON employee_id = employees.pk AND (EMPLOYEE_TYPE = 0 OR EMPLOYEE_TYPE = 1) AND source_language_id = '<#SOURCE_LANGUAGE#>' AND target_language_id = '<#TARGET_LANGUAGE#>'"
    },

    EMPLOYEES_WITH_TRANSLATION_AREA: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,TRANSLATION_AREAS",
        where: "SUBSTRING(TRANSLATION_AREAS, '<#TRANSLATION_AREA#>', 1) = 1 AND (EMPLOYEE_TYPE = 0 OR EMPLOYEE_TYPE = 1)"
    },

    EMPLOYEES_WITH_CAT_TOOL: {
        ForManagers,
        Unlistenable,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,EMPLOYEE_TYPE,ONLINE_STATUS,CAT_TOOLS",
        where: "SUBSTRING(CAT_TOOLS, '<#CAT_TOOL#>', 1) = 1 AND (EMPLOYEE_TYPE = 0 OR EMPLOYEE_TYPE = 1)"
    },

    INVOICES_WITH_NUMBER: {
        ForManagers,
        table: "INVOICES",
        fields: "PK,INVOICE_NUMBER,STATUS,CLIENT_ID,IS_USA_SPECIAL,IS_MONTHLY",
        where: "(INVOICE_NUMBER = '<#INVOICE_NUMBER#>' AND INVOICE_NUMBER <> '') OR PK = '<#INVOICE_NUMBER#>'"
    },

    INVOICES_FOR_CLIENT: {
        ForManagers,
        table: "INVOICES",
        fields: "PK,INVOICE_NUMBER,STATUS,CLIENT_ID,IS_USA_SPECIAL,IS_MONTHLY",
        where: "CLIENT_ID = '<#CLIENT_ID#>' AND CLIENT_ID > 0"
    },

    UNPAID_INVOICES_LIST: {
        ForManagers,
        table: "INVOICES",
        fields:
            "INVOICES.PK,INVOICE_NUMBER,INVOICE_DATE,IS_MONTHLY,INVOICES.STATUS,INVOICES.CLIENT_ID,IS_USA_SPECIAL,ROUND(SUM(CALCULATED_PRICE), 2) AS TOTAL_AMOUNT,REGION,PAYMENT_TERMS",
        join:
            "JOIN CLIENTS ON CLIENT_ID = CLIENTS.PK JOIN COUNTRIES ON COUNTRY_ID = COUNTRIES.PK JOIN PROJECTS ON INVOICE_ID = INVOICES.PK AND INVOICES.STATUS <> 1 GROUP BY INVOICE_ID"
    },

    PREQUOTES_NOT_COMPLETED: {
        ForManagers,
        table: "PREQUOTES",
        fields:
            "PK,STATUS,WORKING_MANAGER_NAME,CLIENT_ID,PROJECT_EMAIL,SOURCE_LANGUAGE,TARGET_LANGUAGES,COMMENTS,FILES_DATA,FILE_URLS,IS_CERTIFIED,IS_NOTARIZED,WEBSITE_ORDER_ID,PRICE,CLIENT_ORDER_NUMBER,SHOULD_BE_SENT_BY_POST,SHIPPING_NAME,SHIPPING_STREET,SHIPPING_CITY,SHIPPING_ZIP,SHIPPING_STATE,SHIPPING_COUNTRY,SHIPPING_PHONE,HAS_DIGITAL_CERTIFICATION,TEMPLATE_EDITOR_LINK,PAYMENT_METHOD,TRANSACTION_ID,PAYMENT_DATE,PAYMENT_TOTAL_PRICE",
        where: "STATUS < 2"
    },

    PREQUOTE_DETAILS: {
        ForManagers,
        table: "PREQUOTES",
        fields:
            "PK,STATUS,WORKING_MANAGER_NAME,CLIENT_ID,PROJECT_EMAIL,SOURCE_LANGUAGE,TARGET_LANGUAGES,COMMENTS,FILES_DATA,FILE_URLS,IS_CERTIFIED,IS_NOTARIZED,WEBSITE_ORDER_ID,PRICE,CLIENT_ORDER_NUMBER,SHOULD_BE_SENT_BY_POST,SHIPPING_NAME,SHIPPING_STREET,SHIPPING_CITY,SHIPPING_ZIP,SHIPPING_STATE,SHIPPING_COUNTRY,SHIPPING_PHONE,HAS_DIGITAL_CERTIFICATION,TEMPLATE_EDITOR_LINK,PAYMENT_METHOD,TRANSACTION_ID,PAYMENT_DATE,PAYMENT_TOTAL_PRICE",
        where: "PK = <#PK#>"
    },

    INVOICE_DETAILS: {
        ForManagers,
        table: "INVOICES",
        fields:
            "PK,INVOICE_DATE,COMMENTS,COMMENTS_FROM_CLIENT,DATE_PAID,PAYMENT_METHOD,PAYMENT_METHOD_OTHER,TRANSACTION_ID,MONTH,YEAR,CLIENT_PAYMENT_METHOD,CLIENT_PAYPAL_TRANSACTION,CLIENT_PAID_DATE,CLIENT_WILL_PAY_DATE,PAYMENT_NAME,SET_ON_PAID_BY,SET_ON_PAID_AT"
    },

    INVOICES_WITH_PAYMENT_NAME: {
        ForManagers,
        Unlistenable,
        table: "INVOICES",
        fields: "INVOICES.PK,INVOICE_NUMBER,INVOICE_DATE,IS_MONTHLY,INVOICES.STATUS,INVOICES.CLIENT_ID,IS_USA_SPECIAL,LOWER(PAYMENT_NAME) AS FILTER_PAYMENT_NAME",
        where: "PAYMENT_NAME LIKE '%<#PAYMENT_NAME#>%' LIMIT 100"
    },

    PROJECTS_FOR_INVOICE: {
        ForManagers,
        table: "PROJECTS",
        key: "INVOICE_ID",
        fields: "PK,PROJECT_NUMBER,PROJECT_EMAIL,CALCULATED_PRICE,CURRENCY,REQUIRED_PREPAYMENT_PERCENT,CLIENT_ORDER_NUMBER"
    },

    CERTIFICATE_TEMPLATES: {
        ForManagers,
        table: "CERTIFICATE_TEMPLATES",
        fields: "PK,COUNTRY_ID,SOURCE_LANGUAGE_ID,TARGET_LANGUAGE_ID,CERTIFICATE_TYPE"
    },

    CERTIFICATE_TEMPLATES_DETAILS: {
        ForManagers,
        table: "CERTIFICATE_TEMPLATES",
        fields: "PK,SOURCE_LINK,TARGET_LINK"
    },

    TIPS: { ForManagers, ForTranslators, table: "TIPS", fields: "PK,DATE,SUBJECT,DESCRIPTION,CATEGORY" },

    TIPS_MANAGERS: { ForManagers, table: "TIPS_MANAGERS", fields: "PK,DATE,SUBJECT,DESCRIPTION,CATEGORY" },

    TWILIO_MESSAGES: { ForManagers, table: "TWILIO_MESSAGES", fields: "PK,PHONE_NUMBER,MESSAGE,MESSAGE_TIME,SENDER_ID,CLIENT_ID,ATTACHMENT_LINKS,IS_ANSWERED,IS_WHATSAPP,DIVISION_ID" },

    SMS_TEMPLATES: { ForManagers, table: "SMS_TEMPLATES", fields: "PK,TITLE,TEXT" },

    TWILIO_MESSAGES_LIST: {
        ForManagers,
        table: "TWILIO_MESSAGES",
        fields: "PK,PHONE_NUMBER,MESSAGE,MESSAGE_TIME,SENDER_ID,CLIENT_ID,ATTACHMENT_LINKS,IS_ANSWERED,IS_WHATSAPP,DIVISION_ID",
        where: "PK in (select max(PK) from TWILIO_MESSAGES group by PHONE_NUMBER, DIVISION_ID)"
    },

    TWILIO_MESSAGES_WITH_CLIENT_ID: {
        ForManagers,
        table: "TWILIO_MESSAGES",
        fields: "PK,PHONE_NUMBER,MESSAGE,MESSAGE_TIME,SENDER_ID,CLIENT_ID,ATTACHMENT_LINKS,IS_ANSWERED,IS_WHATSAPP,DIVISION_ID",
        where: "CLIENT_ID > 0"
    },

    TWILIO_MESSAGES_WITH_PHONE_NUMBER: {
        ForManagers,
        table: "TWILIO_MESSAGES",
        fields: "PK,PHONE_NUMBER,MESSAGE,MESSAGE_TIME,SENDER_ID,CLIENT_ID,ATTACHMENT_LINKS,IS_ANSWERED,IS_WHATSAPP,DIVISION_ID",
        where: "PHONE_NUMBER = '<#PHONE_NUMBER#>' AND DIVISION_ID = <#DIVISION_ID#>"
    },

    LANGUAGES: { ForManagers, ForTranslators, table: "LANGUAGES", fields: "PK,LANGUAGE" },

    COUNTRIES: { ForManagers, ForTranslators, table: "COUNTRIES", fields: "PK,COUNTRY,CODE2,IS_EU,REGION" },

    DIVISIONS: {
        ForManagers,
        table: "DIVISIONS",
        fields: "PK,DIVISION,NAME,EMAIL,EMAIL_SIGNATURE,DIVISION_CODE"
    },

    SETTINGS: {
        ForManagers,
        table: "SETTINGS",
        fields: "PK,PARAMETER,VALUE",
        where: "CATEGORY = 1"
    },

    SETTINGS_TR: {
        ForTranslators,
        table: "SETTINGS",
        fields: "PK,PARAMETER,VALUE",
        where: "CATEGORY = 2"
    },

    OPENED_PROJECTS_TR: {
        ForTranslators,
        uploadTokenGeneratorKey: "PROJECTS_FILES_TRANSLATORS",
        includeDetailsTokens: true,
        table: "PROJECTS",
        fields: "PK,PROJECT_NUMBER,STATUS,SOURCE_LANGUAGE_ID,PROJECT_TYPE",
        where: `STATUS IN (${$C.psPending}, ${$C.psTranslation}, ${$C.psProofreading}, ${$C.psCheckPhase}, ${$C.psReopened})`
    },

    CLIENTS_FILES_FOR_PROJECT_TR: {
        ForTranslators,
        Unlistenable,
        requiresDetailsToken: "PROJECTS",
        table: "CLIENTS_FILES",
        fields: "CLIENTS_FILES.PK,CLIENTS_FILES.CLIENT_ID,FILE_NAME,SIZE",
        join: "JOIN PROJECTS ON PROJECTS.CLIENT_ID = CLIENTS_FILES.CLIENT_ID AND PROJECTS.PK = <$PKs$>"
    },

    PROJECTS_DETAILS_TR: {
        ForTranslators,
        requiresDetailsToken: true,
        table: "PROJECTS",
        fields:
            "PROJECTS.PK,PROJECT_NUMBER,STATUS,DEADLINE,DEADLINE_INTERMEDIATE,DEADLINE_TRANSLATOR,DEADLINE_PROOFREADER,DEADLINE_REOPENED,IS_CERTIFIED,IS_NOTARIZED,SOURCE_WORDS,WORDS_NO_MATCH,WORDS_FUZZY_MATCH,WORDS_REPS,CLIENT_ID,CAT_TOOLS,CAT_TOOLS_OTHER,SOURCE_LANGUAGE_ID,PROJECT_TYPE,PROJECTS.SPECIAL_INSTRUCTIONS,REOPEN_COMMENTS,RESPONSIBLE_MANAGER,AREA_OF_EXPERTISE,PAYMENT_TRANSLATOR,PAYMENT_PROOFREADER,INSTRUCTIONS_FOR_TRANSLATORS as CLIENT_INSTRUCTIONS_FOR_TRANSLATORS",
        join: "JOIN CLIENTS ON CLIENT_ID = CLIENTS.PK"
    },

    PROJECTS_MESSAGES_FOR_SUBPROJECT_TR: {
        table: "PROJECTS_MESSAGES",
        fields: "PROJECTS_MESSAGES.PK,PROJECTS_MESSAGES.PROJECT_ID,SUBPROJECT_ID,TRANSLATION_ID,SENDER,RECIPIENT,MESSAGE,MESSAGE_TIME,IS_READ,PREVIEW",
        join:
            "PROJECTS ON PROJECT_ID = PROJECTS.PK JOIN SUBPROJECTS ON PROJECTS.PK = SUBPROJECTS.PROJECT_ID AND SUBPROJECTS.PK = <#SUBPROJECT_ID#> AND (SENDER = <#OWN_ID#> OR RECIPIENT = <#OWN_ID#>) AND SENDER <> 'C2T'"
    },

    PENDING_PROJECTS_MESSAGES_TR: {
        ForTranslators,
        table: "PROJECTS_MESSAGES",
        fields: "PK,PROJECT_ID,SUBPROJECT_ID,TRANSLATION_ID,SENDER,RECIPIENT,MESSAGE,MESSAGE_TIME,IS_READ,IS_PROBLEM,PREVIEW",
        where: "IS_PROBLEM = 1 AND IS_READ = 0 AND RECIPIENT = <#EMPLOYEE_ID#> AND SENDER <> 'C2T'"
    },

    MAIN_PROJECTS_FILES_FOR_PROJECT_TR: {
        ForTranslators,
        Unlistenable,
        requiresDetailsToken: "PROJECTS",
        table: "PROJECTS_FILES",
        fields: "PROJECTS_FILES.PK,PROJECT_ID,SUBPROJECT_ID,FILE_TYPE,FILE_NAME,SIZE,EMPLOYEE_ID,UPLOAD_TIME,PREFIX,CONCAT(FIRST_NAME, ' ', LAST_NAME) AS UPLOADER_NAME",
        join: `JOIN EMPLOYEES ON EMPLOYEE_ID = EMPLOYEES.PK AND PROJECT_ID = <$PKs$> AND FILE_TYPE IN (${$C.pfMain}, ${$C.pfReopenedMain}, ${$C.pfReference}, ${$C.pfCATAnalysis}, ${$C.pfCATMemory})`
    },

    TRANSLATED_PROJECTS_FILES_FOR_SUBPROJECT_TR: {
        table: "PROJECTS_FILES",
        fields: "PROJECTS_FILES.PK,PROJECT_ID,SUBPROJECT_ID,FILE_TYPE,FILE_NAME,SIZE,EMPLOYEE_ID,UPLOAD_TIME,PREFIX,CONCAT(FIRST_NAME, ' ', LAST_NAME) AS UPLOADER_NAME",
        join: `EMPLOYEES ON EMPLOYEE_ID = EMPLOYEES.PK AND SUBPROJECT_ID = <#SUBPROJECT_ID#> AND FILE_TYPE IN (${$C.pfTranslated}, ${$C.pfReopenedTranslated}, ${$C.pfProofread}, ${$C.pfReopenedProofread}, ${$C.pfEdited})`
    },

    SUBPROJECTS_FOR_OPENED_PROJECTS_TR: {
        ForTranslators,
        table: "SUBPROJECTS",
        fields: "SUBPROJECTS.PK,PROJECT_ID,LANGUAGE_ID,INTERMEDIATE_LANGUAGE_ID,IS_REOPENED,ALLOW_PROOFREADERS_SPECIAL",
        join: `INNER JOIN PROJECTS ON SUBPROJECTS.PROJECT_ID = PROJECTS.PK AND PROJECTS.STATUS IN (${$C.psPending}, ${$C.psTranslation}, ${$C.psProofreading}, ${$C.psCheckPhase}, ${$C.psReopened})`
    },

    TRANSLATIONS_FOR_OPENED_PROJECTS_TR: {
        ForTranslators,
        Unlistenable, // Don't listen to this tableView. Changes to these objects are forwarded manually in MessageForwarder
        table: "TRANSLATIONS",
        fields: "TRANSLATIONS.PK,EMPLOYEE_ID,SUBPROJECT_ID,REPLY,TRANSLATIONS.STATUS,UPLOADED_ALL_FILES",
        fieldsCompressed: "TRANSLATIONS.PK,EMPLOYEE_ID as B,SUBPROJECT_ID as C,REPLY as D,TRANSLATIONS.STATUS as E,UPLOADED_ALL_FILES as F",
        join: `INNER JOIN SUBPROJECTS ON SUBPROJECT_ID = SUBPROJECTS.PK INNER JOIN PROJECTS ON SUBPROJECTS.PROJECT_ID = PROJECTS.PK AND PROJECTS.STATUS IN (${$C.psPending}, ${$C.psTranslation}, ${$C.psProofreading}, ${$C.psCheckPhase}, ${$C.psReopened}) AND EMPLOYEE_ID = <#EMPLOYEE_ID#>`
    },

    PROJECTS_FOR_ASSIGNED_TRANSLATIONS_TR: {
        ForTranslators,
        includeDetailsTokens: true,
        table: "PROJECTS",
        fields: "PROJECTS.PK,PROJECT_NUMBER,PROJECTS.STATUS,SOURCE_LANGUAGE_ID,DEADLINE_TRANSLATOR,DEADLINE_PROOFREADER",
        fieldsCompressed: "PROJECTS.PK,PROJECT_NUMBER as B,PROJECTS.STATUS as C,SOURCE_LANGUAGE_ID as D,DEADLINE_TRANSLATOR as E,DEADLINE_PROOFREADER as F",
        where:
            "PK IN (SELECT PROJECT_ID FROM SUBPROJECTS WHERE PK IN (SELECT SUBPROJECT_ID FROM (SELECT SUBPROJECT_ID FROM TRANSLATIONS WHERE EMPLOYEE_ID = <#EMPLOYEE_ID#> AND STATUS > 0 ORDER BY PK DESC LIMIT 300) AS X))"
    },

    SUBPROJECTS_FOR_ASSIGNED_TRANSLATIONS_TR: {
        ForTranslators,
        table: "SUBPROJECTS",
        fields: "SUBPROJECTS.PK,PROJECT_ID,LANGUAGE_ID,INTERMEDIATE_LANGUAGE_ID,IS_REOPENED,ALLOW_PROOFREADERS_SPECIAL",
        fieldsCompressed: "SUBPROJECTS.PK,PROJECT_ID as B,LANGUAGE_ID as C,INTERMEDIATE_LANGUAGE_ID as D,IS_REOPENED as E,ALLOW_PROOFREADERS_SPECIAL as F",
        where: "PK IN (SELECT SUBPROJECT_ID FROM (SELECT SUBPROJECT_ID FROM TRANSLATIONS WHERE EMPLOYEE_ID = <#EMPLOYEE_ID#> AND STATUS > 0 ORDER BY PK DESC LIMIT 300) AS X)"
    },

    ASSIGNED_TRANSLATIONS_FOR_EMPLOYEE_TR: {
        ForTranslators,
        Unlistenable, // Don't listen to this tableView. Changes to these objects are forwarded manually in MessageForwarder
        table: "TRANSLATIONS",
        fields: "PK,EMPLOYEE_ID,SUBPROJECT_ID,REPLY,STATUS,UPLOADED_ALL_FILES",
        fieldsCompressed: "PK,EMPLOYEE_ID as B,SUBPROJECT_ID as C,REPLY as D,STATUS as E,UPLOADED_ALL_FILES as F",
        where: "EMPLOYEE_ID = <#EMPLOYEE_ID#> AND STATUS > 0 ORDER BY PK DESC LIMIT 300"
    },

    ALL_PROJECTS_FOR_TRANSLATIONS_TR: {
        ForTranslators,
        includeDetailsTokens: true,
        table: "PROJECTS",
        fields: "PROJECTS.PK,PROJECT_NUMBER,PROJECTS.STATUS,SOURCE_LANGUAGE_ID,DEADLINE_TRANSLATOR,DEADLINE_PROOFREADER",
        fieldsCompressed: "PROJECTS.PK,PROJECT_NUMBER as B,PROJECTS.STATUS as C,SOURCE_LANGUAGE_ID as D,DEADLINE_TRANSLATOR as E,DEADLINE_PROOFREADER as F",
        join: "JOIN SUBPROJECTS ON PROJECT_ID = PROJECTS.PK JOIN TRANSLATIONS ON SUBPROJECT_ID = SUBPROJECTS.PK AND EMPLOYEE_ID = <#EMPLOYEE_ID#>"
    },

    ALL_SUBPROJECTS_FOR_TRANSLATIONS_TR: {
        ForTranslators,
        table: "SUBPROJECTS",
        fields: "SUBPROJECTS.PK,PROJECT_ID,LANGUAGE_ID,INTERMEDIATE_LANGUAGE_ID,IS_REOPENED,ALLOW_PROOFREADERS_SPECIAL",
        fieldsCompressed: "SUBPROJECTS.PK,PROJECT_ID as B,LANGUAGE_ID as C,INTERMEDIATE_LANGUAGE_ID as D,IS_REOPENED as E,ALLOW_PROOFREADERS_SPECIAL as F",
        join: "INNER JOIN TRANSLATIONS ON SUBPROJECT_ID = SUBPROJECTS.PK AND EMPLOYEE_ID = <#EMPLOYEE_ID#>"
    },

    ALL_TRANSLATIONS_FOR_EMPLOYEE_TR: {
        ForTranslators,
        Unlistenable, // Don't listen to this tableView. Changes to these objects are forwarded manually in MessageForwarder
        table: "TRANSLATIONS",
        fields: "PK,EMPLOYEE_ID,SUBPROJECT_ID,REPLY,STATUS,UPLOADED_ALL_FILES",
        fieldsCompressed: "PK,EMPLOYEE_ID as B,SUBPROJECT_ID as C,REPLY as D,STATUS as E,UPLOADED_ALL_FILES as F",
        where: "EMPLOYEE_ID = <#EMPLOYEE_ID#>"
    },

    TRANSLATION_DETAILS_TR: {
        ForTranslators,
        Unlistenable, // Don't listen to this tableView. Changes to these objects are forwarded manually in MessageForwarder
        table: "TRANSLATIONS",
        ownIDField: "EMPLOYEE_ID", // Allow requesting only of user's translations, not any translation
        fields:
            "PK,EMPLOYEE_ID,SUBPROJECT_ID,REPLY,REPLY_COMMENTS,STATUS,COMMENTS,PAYMENT_METHOD,PRICE,UNASSIGN_REASON,CONFIRMED," +
            "STATUS_TEXT,TARGET_WORDS,AMOUNT_CORRECTION,AMOUNT_CORRECTION_PERCENT,PAYMENT_SHEET_ID,UPLOADED_ALL_FILES,WATCH_STATUS,UNASSIGNED_AFTER_REOPEN"
    },

    TRANSLATION_DETAILS_OTHER_TR: {
        ForTranslators,
        Unlistenable, // Don't listen to this tableView. Changes to these objects are forwarded manually in MessageForwarder
        table: "TRANSLATIONS",
        requiresDetailsToken: true,
        fields: "PK,EMPLOYEE_ID,SUBPROJECT_ID,STATUS,COMMENTS,UPLOADED_ALL_FILES"
    },

    SUBPROJECT_DETAILS_TR: {
        ForTranslators,
        Unlistenable, // Don't listen to this tableView. Changes to these objects are forwarded manually in MessageForwarder
        requiresDetailsToken: true,
        table: "SUBPROJECTS",
        fields: "PK,PROJECT_ID,LANGUAGE_ID,INTERMEDIATE_LANGUAGE_ID,IS_REOPENED,ALLOW_PROOFREADERS_SPECIAL"
    },

    PROJECT_DETAILS_TR: {
        ForTranslators,
        Unlistenable, // Don't listen to this tableView. Changes to these objects are forwarded manually in MessageForwarder
        requiresDetailsToken: true,
        includeDetailsTokens: true,
        table: "PROJECTS",
        fields: "PK,PROJECT_NUMBER,STATUS,SOURCE_LANGUAGE_ID,DEADLINE_TRANSLATOR,DEADLINE_PROOFREADER,IS_CERTIFIED,IS_NOTARIZED"
    },

    TRANSLATIONS_FOR_SUBPROJECT_TR: {
        ForTranslators,
        Unlistenable,
        requiresAssignment: true,
        table: "TRANSLATIONS",
        fields: "PK,EMPLOYEE_ID,SUBPROJECT_ID,STATUS,COMMENTS,UPLOADED_ALL_FILES",
        where: `SUBPROJECT_ID = <$PKs$> AND STATUS IN (${$C.tsTranslating}, ${$C.tsProofreading})`
    },

    EMPLOYEES_FOR_SUBPROJECT_TR: {
        ForTranslators,
        Unlistenable,
        requiresAssignment: true,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,ONLINE_STATUS,UTC_OFFSET",
        where: "PK IN (SELECT DISTINCT EMPLOYEE_ID FROM TRANSLATIONS WHERE SUBPROJECT_ID = <$PKs$>)"
    },

    MANAGERS_LIST_TR: {
        ForTranslators,
        Unlistenable,
        table: "EMPLOYEES",
        fields: "PK,EMPLOYEE_TYPE,ONLINE_STATUS,IS_NOT_AVAILABLE,FIRST_NAME,LAST_NAME",
        where: "EMPLOYEE_TYPE = 2"
    },

    EMPLOYEES_LANGUAGES_TR: {
        ForTranslators,
        Unlistenable,
        table: "EMPLOYEES_LANGUAGES",
        fields: "PK,EMPLOYEE_ID,SOURCE_LANGUAGE_ID,TARGET_LANGUAGE_ID",
        where: "EMPLOYEE_ID = <#EMPLOYEE_ID#>"
    },

    EMPLOYEES_PAYMENT_SHEETS_TR: {
        ForTranslators,
        Unlistenable,
        includeDetailsTokens: true,
        table: "PAYMENT_SHEETS",
        fields: "PK,EMPLOYEE_ID,PAYMENT_STATUS,MONTH,YEAR,COMMENTS,EMPLOYEE_COMMENTS,EXTRA_AMOUNT,INVOICE_FILE_NAME,TEST_TRANSLATIONS_COUNT",
        where: "EMPLOYEE_ID = <#EMPLOYEE_ID#>"
    },

    EMPLOYEES_DETAILS_TR: {
        ForTranslators,
        requiresDetailsToken: true,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,ONLINE_STATUS,UTC_OFFSET"
    },

    PROJECTS_FOR_PAYMENT_SHEET_TR: {
        ForTranslators,
        requiresDetailsToken: "PAYMENT_SHEETS",
        table: "PROJECTS",
        fields: "PROJECTS.PK,PROJECT_NUMBER,SOURCE_WORDS,WORDS_NO_MATCH,WORDS_FUZZY_MATCH,WORDS_REPS",
        join:
            "INNER JOIN subprojects ON project_id = projects.pk INNER JOIN translations ON translations.subproject_id = subprojects.pk AND translations.payment_sheet_id in (<$PKs$>)"
    },

    SUBPROJECTS_FOR_PAYMENT_SHEET_TR: {
        ForTranslators,
        requiresDetailsToken: "PAYMENT_SHEETS",
        table: "SUBPROJECTS",
        fields: "SUBPROJECTS.PK,PROJECT_ID",
        join: "INNER JOIN translations ON translations.subproject_id = subprojects.pk AND translations.payment_sheet_id in (<$PKs$>)"
    },

    TRANSLATIONS_FOR_PAYMENT_SHEET_TR: {
        ForTranslators,
        requiresDetailsToken: "PAYMENT_SHEETS",
        table: "TRANSLATIONS",
        fields: "PK,EMPLOYEE_ID,STATUS,SUBPROJECT_ID,PAYMENT_SHEET_ID,PAYMENT_METHOD,PRICE,AMOUNT_CORRECTION_PERCENT,AMOUNT_CORRECTION",
        key: "PAYMENT_SHEET_ID"
    },

    PROJECTS_COMPLETED_ON_MONTH_TR: {
        ForTranslators,
        AllowsCriteria,
        table: "PROJECTS",
        fields:
            "PROJECTS.PK,PROJECTS.STATUS,PROJECT_NUMBER,SOURCE_WORDS,WORDS_NO_MATCH,WORDS_FUZZY_MATCH,WORDS_REPS,MONTH(FROM_UNIXTIME(DEADLINE)) AS MONTH_COMPLETED,YEAR(FROM_UNIXTIME(DEADLINE)) AS YEAR_COMPLETED",
        join:
            "subprojects ON project_id = projects.pk INNER JOIN translations ON translations.subproject_id = subprojects.pk AND translations.employee_id = <#OWN_ID#> " +
            " AND PROJECTS.STATUS IN (7, 8, 9) AND MONTH(FROM_UNIXTIME(DEADLINE-3600)) = '<#MONTH#>' AND YEAR(FROM_UNIXTIME(DEADLINE-3600)) = '<#YEAR#>' AND TRANSLATIONS.STATUS IN (1, 2)"
    },

    SUBPROJECTS_COMPLETED_ON_MONTH_TR: {
        ForTranslators,
        AllowsCriteria,
        table: "SUBPROJECTS",
        fields: "SUBPROJECTS.PK,PROJECT_ID",
        join:
            "projects ON project_id = projects.pk INNER JOIN translations ON translations.subproject_id = subprojects.pk AND translations.employee_id = <#OWN_ID#> " +
            " AND PROJECTS.STATUS IN (7, 8, 9) AND MONTH(FROM_UNIXTIME(DEADLINE-3600)) = '<#MONTH#>' AND YEAR(FROM_UNIXTIME(DEADLINE-3600)) = '<#YEAR#>' AND TRANSLATIONS.STATUS IN (1, 2)"
    },

    TRANSLATIONS_COMPLETED_ON_MONTH_TR: {
        ForTranslators,
        AllowsCriteria,
        table: "TRANSLATIONS",
        fields: "TRANSLATIONS.PK,EMPLOYEE_ID,TRANSLATIONS.STATUS,SUBPROJECT_ID,PAYMENT_METHOD,TRANSLATIONS.PRICE,AMOUNT_CORRECTION_PERCENT,AMOUNT_CORRECTION",
        join:
            "subprojects ON translations.subproject_id = subprojects.pk JOIN projects ON project_id = projects.pk AND translations.employee_id = <#OWN_ID#> " +
            " AND PROJECTS.STATUS IN (7, 8, 9) AND MONTH(FROM_UNIXTIME(DEADLINE-3600)) = '<#MONTH#>' AND YEAR(FROM_UNIXTIME(DEADLINE-3600)) = '<#YEAR#>' AND TRANSLATIONS.STATUS IN (1, 2)"
    },

    EMPLOYEES_DETAILS_FOR_CHAT_TR: {
        ForTranslators,
        requiresDetailsToken: true,
        table: "EMPLOYEES",
        fields: "PK,FIRST_NAME,LAST_NAME,ONLINE_STATUS"
    },

    EMPLOYEE_RESUME_TR: {
        ForTranslators,
        onlyForToken: true,
        uploadTokenGeneratorKey: "EMPLOYEE_RESUME",
        table: "EMPLOYEES",
        fields: ""
    },

    EMPLOYEE_DIPLOMA_TR: {
        ForTranslators,
        onlyForToken: true,
        uploadTokenGeneratorKey: "EMPLOYEE_DIPLOMA",
        table: "EMPLOYEES",
        fields: ""
    }
}

module.exports = tableViews
